// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Team-bluekunVRC/discord-bot/ent/audioclip"
	"github.com/Team-bluekunVRC/discord-bot/ent/discorduser"
	"github.com/Team-bluekunVRC/discord-bot/ent/image"
	"github.com/Team-bluekunVRC/discord-bot/ent/role"
	"github.com/Team-bluekunVRC/discord-bot/ent/schema"
	"github.com/Team-bluekunVRC/discord-bot/ent/user"
	"github.com/Team-bluekunVRC/discord-bot/ent/vrcuser"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	audioclipFields := schema.AudioClip{}.Fields()
	_ = audioclipFields
	// audioclipDescStoragePath is the schema descriptor for storage_path field.
	audioclipDescStoragePath := audioclipFields[1].Descriptor()
	// audioclip.StoragePathValidator is a validator for the "storage_path" field. It is called by the builders before save.
	audioclip.StoragePathValidator = audioclipDescStoragePath.Validators[0].(func(string) error)
	// audioclipDescID is the schema descriptor for id field.
	audioclipDescID := audioclipFields[0].Descriptor()
	// audioclip.DefaultID holds the default value on creation for the id field.
	audioclip.DefaultID = audioclipDescID.Default.(func() uuid.UUID)
	discorduserFields := schema.DiscordUser{}.Fields()
	_ = discorduserFields
	// discorduserDescID is the schema descriptor for id field.
	discorduserDescID := discorduserFields[0].Descriptor()
	// discorduser.IDValidator is a validator for the "id" field. It is called by the builders before save.
	discorduser.IDValidator = discorduserDescID.Validators[0].(func(string) error)
	imageFields := schema.Image{}.Fields()
	_ = imageFields
	// imageDescStoragePath is the schema descriptor for storage_path field.
	imageDescStoragePath := imageFields[1].Descriptor()
	// image.StoragePathValidator is a validator for the "storage_path" field. It is called by the builders before save.
	image.StoragePathValidator = imageDescStoragePath.Validators[0].(func(string) error)
	// imageDescID is the schema descriptor for id field.
	imageDescID := imageFields[0].Descriptor()
	// image.DefaultID holds the default value on creation for the id field.
	image.DefaultID = imageDescID.Default.(func() uuid.UUID)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[1].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.DefaultID holds the default value on creation for the id field.
	role.DefaultID = roleDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	vrcuserFields := schema.VRCUser{}.Fields()
	_ = vrcuserFields
	// vrcuserDescID is the schema descriptor for id field.
	vrcuserDescID := vrcuserFields[0].Descriptor()
	// vrcuser.IDValidator is a validator for the "id" field. It is called by the builders before save.
	vrcuser.IDValidator = vrcuserDescID.Validators[0].(func(string) error)
}
